name: Cross-Platform Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-platforms:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run platform compatibility test
      run: npm run test:platform

    - name: Generate Prisma client
      run: npx prisma generate

    - name: TypeScript compilation check
      run: npx tsc --noEmit --skipLibCheck

    - name: Lint check
      run: npm run lint

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        DATABASE_URL: "file:./test.db"
        NEXTAUTH_SECRET: "test-secret-for-ci"
        NEXTAUTH_URL: "http://localhost:3000"

    - name: Test build artifacts
      shell: bash
      run: |
        if [ ! -f ".next/BUILD_ID" ]; then
          echo "Build ID file missing"
          exit 1
        fi
        if [ ! -f ".next/package.json" ]; then
          echo "Package.json missing from build"
          exit 1
        fi
        echo "Build artifacts verified successfully"

    - name: Test Docker build (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker build -t edgenyapp-test .
        docker run --rm edgenyapp-test echo "Docker build successful"

  test-architectures:
    name: Test Docker on ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image for ${{ matrix.arch }}
      run: |
        docker buildx build \
          --platform linux/${{ matrix.arch }} \
          --tag edgenyapp-${{ matrix.arch }} \
          --load \
          .

    - name: Test Docker image
      run: |
        docker run --rm edgenyapp-${{ matrix.arch }} echo "Docker ${{ matrix.arch }} build successful"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq '.vulnerabilities | length' | grep -q '^0$'; then
          echo "No high-severity vulnerabilities found"
        else
          echo "High-severity vulnerabilities detected"
          npm audit --audit-level=high
          exit 1
        fi
